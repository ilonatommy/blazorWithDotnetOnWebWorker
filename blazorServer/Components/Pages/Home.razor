@page "/"
@rendermode InteractiveServer
@inject IJSRuntime JSRuntime

<!-- scrip loading here should not be needed but it fails without it -->
<script src="client.js"></script>

<PageTitle>Home</PageTitle>

<h1>Hello, world!</h1>

Welcome to our Blazor Server with dotnet on WebWorker demo.

ToDo: add spinner instead of this button as long as we don't get exportsReady from the worker
<button class="btn btn-primary" @onclick="GenerateQR">Generate QR</button>

<img src="@MyInteropMethods.blobUrl" alt="Image" />

@code {
    bool dotnetStarted = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!dotnetStarted)
        {
            Console.WriteLine($"dotnetStarted: {dotnetStarted}");
            await JSRuntime.InvokeVoidAsync("clientFunctions.setUpWorker");
            await JSRuntime.InvokeVoidAsync("clientFunctions.launchDotnet");
            dotnetStarted = true;
            Console.WriteLine($"dotnetStarted: {dotnetStarted}");
        }
    }

    private async Task GenerateQR()
    {
        try
        {
            if (!MyInteropMethods.ExportsReady)
            {
                throw new Exception("Exports not ready yet, cannot generate QR code");
            }
            await JSRuntime.InvokeVoidAsync("clientFunctions.generate");
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }

    // ToDo: we could make it instance method, on the same level as other methods in this file
    public static class MyInteropMethods
    {
        public static bool ExportsReady;
        public static string blobUrl;
    
        [JSInvokable("MyInteropMethods.SetExportsReady")]
        public static void SetExportsReady() 
        {
            ExportsReady = true;
        }

        [JSInvokable("MyInteropMethods.SetQRCodeImage")]
        public static void SetQRCodeImage(string url)
        {
            Console.WriteLine("QR code image received");
            blobUrl = url;
        }
    }
}